@model IEnumerable<FilmReviewerApp.Models.Film>

@{
    ViewData["Title"] = "Films";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form method="get">
    <div class="form-group">
        <label for="searchInput">Search:</label>
        <input type="text" class="form-control" id="searchInput" name="searchString" value="@ViewData["CurrentFilter"]" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@GetSortOrder("Title")">Title</a>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Director)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Director)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.FilmId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.FilmId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.FilmId">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    string GetSortOrder(string column)
    {
        if (string.Equals((string?)ViewData["SortOrder"], column, StringComparison.OrdinalIgnoreCase))
        {
            return ViewData["SortOrder"] + "_desc";
        }
        return column;
    }
}

